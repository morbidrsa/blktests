#!/bin/bash
#
# Regression test for patch "nvme: don't send keep-alives to the discovery
# controller"
#
# Copyright (C) 2018 Johannes Thumshirn
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

DESCRIPTION="Test if we're sending keep-alives to a discovery controller"

QUICK=1

requires() {
	_have_program nvme && _have_module nvme-loop && _have_module loop \
		&& _have_configfs
}

test() {
	echo "Running ${TEST_NAME}"

	modprobe nvmet
	modprobe nvme-loop

	port=$(_create_nvmet_port "loop")

	loop_dev="$(losetup -f)"

	_create_nvmet_subsystem "blktests-subsystem-1" ${loop_dev}
	_add_nvmet_subsys_to_port ${port} "blktests-subsystem-1"

	nvme connect -t loop -n nqn.2014-08.org.nvmexpress.discovery

	# This is ugly but checking for the absence of error messages is ...
	sleep 10

	if dmesg | grep -q "failed nvme_keep_alive_end_io error="; then
		echo "Fail"
	fi

	if dmesg | grep -q "nvmet: unsupported cmd 24"; then
		echo "Fail"
	fi

	_remove_nvmet_subsystem_from_port ${port} "blktests-subsystem-1"
	_remove_nvmet_subsystem "blktests-subsystem-1"
	_remove_nvmet_port ${port}

	echo "Test complete"
}
